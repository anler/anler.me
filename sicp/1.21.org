---
title: SICP: Exercise 1.21
---

Use the =smallest-divisor= procedure to find the smallest divisor of each of the following numbers: 199, 1999, 19999.

* Solution

#+BEGIN_SRC scheme
  (smallest-divisor 199)
  ;; → 199

  (smallest-divisor 1999)
  ;; → 1999

  (smallest-divisor 19999)
  ;; → 7
#+END_SRC

Here's the implementation of the =smallest-divisor= procedure in Scheme

#+BEGIN_SRC scheme
  (define (smallest-divisor n)
    (find-divisor n 2))

  (define (find-divisor n test-devisor)
    (cond ((> (square test-divisor) n)
           n)
          ((divides? test-divisor n)
           test-divisor)
          (else (find-divisor n (+ test-divisor 1)))))

  (define (divides? a b)
    (= (remainder b a)
       0))

  (define (prime? n)
    (= n (smallest-divisor n)))
#+END_SRC

and Haskell

#+BEGIN_SRC haskell
  smallestDivisor n = findDivisor n startAt
    where startAt = 2

  findDivisor n testDivisor
      | testDivisor^2 > n = n
      | testDivisor `divides` n = testDivisor
      | otherwise = findDivisor n (succ testDivisor)

  a `divides` b = r == 0
      where r = b `mod` a

  prime n = n == smallestDivisor n
#+END_SRC
